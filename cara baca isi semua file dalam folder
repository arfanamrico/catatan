catatan:
untuk menjadikan path nya relatif kita gunakan tanda r atau \\ (doble slash) 
contoh: r'D:\Test' atau 'D:\\Test 

====membaca semua file didalam sebuah folder==========
import os
path_menuju_folder = "E:\Test"
files = os.listdir(path_menuju_folder)
for i in files[:-1]: # [:-1] untuk melewatkan ada nya folder didalamnya
    f = open(f'{path_menuju_folder}/{i}')
    print(f.read())

====membaca semua file didalam sebuah folder==========
import os
path_menuju_folder = "E:\Test"
files = os.listdir(path_menuju_folder)
def open_file(path):
    with open(path) as f: return f.read()
for i in files[:-1]: # [:-1] untuk melewatkan ada nya folder didalamnya
    print(f'\n namafile >> {i}')
    print(open_file(f'{path_menuju_folder}/{i}'))


========gini doang bisa======
import os
direc = os.listdir('E:\Test')
rows = []
for pile in direc:
    print(pile)
===============================

import os
from os import listdir
from os.path import isfile, join

def get_all_directory ():
  return [name for name in os.listdir(".") if os.path.isdir(name)]

def get_all_filename(path):
  return [f for f in os.listdir(path) if isfile(join(path, f))]

folder = get_all_directory()

for i in folder:
  print(f'\nFolder : {i}')
  files = get_all_filename(i)
  for f in files:
    print(f'\t- {f}')


=======cara lain nya===============

import csv
import os
import pathlib



reader = csv.reader # yang ini hasilnya list
reader = csv.DictReader # yang ini hasilnya dict


# menggunakan module os {{{
dirpath = '/folder/tujuan'
rows = []
for name in os.listdir(dirpath):
    path = os.path.join(dirpath, name)
    if os.path.isfile(path):
        rows.extend(reader(open(path)))

# listcomp
rows = [ row for name in os.listdir(dirpath) if os.path.isfile(path := os.path.join(dirpath, name)) for row in reader(open(path)) ]
# }}}


# menggunakan module pathlib {{{
rows = []
dirpath = pathlib.Path('/folder/tujuan')
for path in dirpath.iterdir():
    if path.is_file():
        rows.extend(reader(path.open()))


# listcomp
rows = [ row for path in dirpath.iterdir() if path.is_file() for row in reader(path.open()) ]
# }}}


# filter(dirpath.is_file, dirpath.iterdir())
# (path for path in dirpath.iterdir() if dirpath.is_file())



# vim: foldenable foldmethod=marker
